server {
    listen 80;
    server_name front-genta.xyz www.front-genta.xyz;

    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        # This path needs to correspond to where Certbot's webroot is pointed
        # In our docker-compose setup, certbot's /var/www/certbot is host's ./certbot/www
        # Nginx in this container needs access to that. We'll handle this by serving challenges directly
        # or by sharing the volume. For simplicity now, we make Nginx aware of the path
        # that Certbot will use *within this container* if it were also mapped here.
        # For the webroot plugin, Nginx itself needs to serve from the challenge directory.
        # We will mount the host's ./certbot/www to /var/www/certbot in this container too.
        root /var/www/certbot; # This Nginx will serve files from this path for challenges
        # allow all; # Default is allow
    }

    # For initial cert acquisition, we might not want to redirect immediately,
    # or ensure Nginx doesn't fail if the 443 block isn't fully working yet.
    # However, for Certbot, only the /.well-known/ path on port 80 matters initially.
    location / {
        return 301 https://$host$request_uri; # Re-enabled
    }
}

server {
    listen 443 ssl http2;
    server_name front-genta.xyz www.front-genta.xyz;

    # SSL Configuration - Certbot has now provided these files
    ssl_certificate /etc/letsencrypt/live/front-genta.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/front-genta.xyz/privkey.pem;

    # These files should have been created by Certbot in your ./certbot/conf directory
    # and one was manually created (ssl-dhparams.pem), one copied by CI/CD (options-ssl-nginx.conf)
    # The volume mount /root/Mamba-React/certbot/conf:/etc/letsencrypt makes them available here.
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /app/dist; # Corrected to point to React app's build output in the image
    index index.html index.htm;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location ~* \.(?:css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    location ~ /\. {
        deny all;
    }

    server_tokens off;
}
