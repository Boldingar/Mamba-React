name: Deploy to DigitalOcean Droplet

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Use Node.js to build locally first as a verification step
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        
      - name: Install axios explicitly
        run: npm install axios
        
      - name: Build project
        run: npm run build
        
      - name: List build output
        run: ls -la dist
      
      # Now proceed with Docker build and deployment if local build succeeded
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: mamba-frontend:latest

      - name: Save Docker image
        run: docker save -o /tmp/mamba-frontend.tar mamba-frontend:latest

      # Deploy to DigitalOcean
      - name: Upload configuration files to droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "docker-compose.yml,nginx.conf"
          target: "/root/mamba-frontend"

      - name: Upload Docker image to droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "/tmp/mamba-frontend.tar"
          target: "/tmp"

      - name: Deploy on droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            # Ensure directories exist
            mkdir -p /root/mamba-frontend
            
            # Load the Docker image
            docker load < /tmp/mamba-frontend.tar
            
            # Deploy using docker-compose
            cd /root/mamba-frontend
            docker-compose down || true
            docker-compose up -d
            
            # Clean up
            rm /tmp/mamba-frontend.tar 