name: Deploy to DigitalOcean Droplet

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Cache Docker layers
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: mamba-frontend:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Move the cache for next time
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Save Docker image
        run: |
          docker save mamba-frontend:latest > /tmp/mamba-frontend.tar
          ls -la /tmp/mamba-frontend.tar

      # Deploy to DigitalOcean
      - name: Upload configuration files to droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "docker-compose.yml,nginx.conf"
          target: "/root/mamba-frontend"
          strip_components: 0

      - name: Upload Docker image to droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          source: "/tmp/mamba-frontend.tar"
          target: "/tmp"
          strip_components: 0
          timeout: 300s
          overwrite: true

      - name: Generate deployment ID
        id: deploy_id
        run: echo "DEPLOY_ID=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - name: Deploy on droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          envs: DEPLOY_ID=${{ steps.deploy_id.outputs.DEPLOY_ID }}
          script: |
            # Ensure directories exist
            mkdir -p /root/mamba-frontend
            
            # Load the Docker image
            docker load < /tmp/mamba-frontend.tar
            
            # Stop and remove existing container if exists
            docker stop $(docker ps -a -q --filter="name=mamba-frontend") 2>/dev/null || true
            docker rm $(docker ps -a -q --filter="name=mamba-frontend") 2>/dev/null || true
            
            # Deploy using docker-compose with unique deployment ID
            cd /root/mamba-frontend
            export DEPLOY_ID="${DEPLOY_ID}"
            docker-compose down --remove-orphans -v 2>/dev/null || true
            docker-compose up -d
            
            # Clean up
            rm -f /tmp/mamba-frontend.tar 